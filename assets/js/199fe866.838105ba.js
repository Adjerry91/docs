"use strict";(self.webpackChunkvrcft_docs=self.webpackChunkvrcft_docs||[]).push([[6915],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||i;return a?n.createElement(m,o(o({ref:t},u),{},{components:a})):n.createElement(m,o({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},92503:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(87462),r=a(67294),i=a(34334),o=a(95999),l=a(86668),s=a(39960);const c={anchorWithStickyNavbar:"anchorWithStickyNavbar_LWe7",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_WYt5"};function u(e){let{as:t,id:a,...u}=e;const{navbar:{hideOnScroll:p}}=(0,l.L)();if("h1"===t||!a)return r.createElement(t,(0,n.Z)({},u,{id:void 0}));const d=(0,o.I)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:"string"==typeof u.children?u.children:a});return r.createElement(t,(0,n.Z)({},u,{className:(0,i.Z)("anchor",p?c.anchorWithHideOnScrollNavbar:c.anchorWithStickyNavbar,u.className),id:a}),u.children,r.createElement(s.Z,{className:"hash-link",to:`#${a}`,"aria-label":d,title:d},"\u200b"))}},24928:(e,t,a)=>{a.d(t,{Ue:()=>c,xc:()=>l});var n=a(67294),r=a(39960),i=a(92503),o=a(90512);function l(e){let{name:t,url:a,description:o}=e;return n.createElement("div",{className:"col col--6 margin-bottom--lg"},n.createElement(r.Z,{class:"card padding--lg cardContainer_node_modules-@docusaurus-theme-classic-lib-theme-DocCard-styles-module",to:a},n.createElement(i.Z,{as:"h2",class:"text--truncate cardTitle_node_modules-@docusaurus-theme-classic-lib-theme-DocCard-styles-module"},t),n.createElement("p",{class:"text--truncate cardDescription_node_modules-@docusaurus-theme-classic-lib-theme-DocCard-styles-module"},o)))}function s(e){let{name:t,image:a,url:l,description:s}=e;return n.createElement("div",{className:"col col--6 margin-bottom--lg"},n.createElement("div",{className:(0,o.Z)("card")},n.createElement("div",{className:(0,o.Z)("card__image")},n.createElement(r.Z,{to:l},n.createElement("img",{src:a,alt:`${t}'s image`}))),n.createElement("div",{className:"card__body"},n.createElement(i.Z,{as:"h3"},t),n.createElement("p",null,s)),n.createElement("div",{className:"card__footer"},n.createElement("div",{className:"button-group button-group--block"},n.createElement(r.Z,{className:"button button--secondary",to:l},"Download")))))}function c(){return n.createElement("div",{class:"row",style:{display:"flex",justifyContent:"center",alignItems:"center"}},n.createElement(s,{name:"VRCFaceTracking AppInstaller",url:"https://github.com/benaclejames/VRCFaceTracking/releases/latest/download/VRCFaceTracking_x64.appinstaller",image:a(82648).Z,description:"Get the latest Release lightweight Windows AppInstaller, just run and install!"}))}},93779:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));a(24928);const i={},o="Quest Pro",l={unversionedId:"hardware/quest-pro",id:"hardware/quest-pro",title:"Quest Pro",description:"The Meta Quest Pro provides eye gaze tracking, detailed eye expression tracking, and face tracking.",source:"@site/docs/hardware/quest-pro.mdx",sourceDirName:"hardware",slug:"/hardware/quest-pro",permalink:"/docs/hardware/quest-pro",draft:!1,editUrl:"https://github.com/VRCFaceTracking/docs/edit/master/docs/hardware/quest-pro.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pimax",permalink:"/docs/hardware/pimax"},next:{title:"Varjo",permalink:"/docs/hardware/varjo"}},s={},c=[{value:"Why is this setup required?",id:"why-is-this-setup-required",level:2},{value:"Setup",id:"setup",level:2},{value:"Enabling Developer Mode on the Headset",id:"enabling-developer-mode-on-the-headset",level:3},{value:"Enabling Eye and Face Tracking on the Headset",id:"enabling-eye-and-face-tracking-on-the-headset",level:3},{value:"Oculus Link/Airlink PC Setup",id:"oculus-linkairlink-pc-setup",level:3},{value:"Modules",id:"modules",level:2},{value:"Tips and Tricks",id:"tips-and-tricks",level:2},{value:"Aligning Play Spaces with SteamVR Lighthouse-tracked Devices",id:"aligning-play-spaces-with-steamvr-lighthouse-tracked-devices",level:3},{value:"Using Index Controllers with the Quest Pro with Link/Airlink",id:"using-index-controllers-with-the-quest-pro-with-linkairlink",level:3},{value:"Common Issues (and How to Solve Them)",id:"common-issues-and-how-to-solve-them",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quest-pro"},"Quest Pro"),(0,r.kt)("p",null,"The Meta Quest Pro provides eye gaze tracking, detailed eye expression tracking, and face tracking.\nAll eye and face tracking hardware is internal to the device (no additional hardware setup required).\nAll eye and face tracking data is accessed via Meta\u2019s Face and Eye OpenXR extensions."),(0,r.kt)("h2",{id:"why-is-this-setup-required"},"Why is this setup required?"),(0,r.kt)("p",null,"The Quest Pro provides developers with both eye and face tracking data from a single, contained device, making it easy for native Quest developers to incorporate.\nHowever, having it only accessible through Meta\u2019s Oculus OpenXR extensions means there must be an OpenXR application using the Oculus runtime running somewhere.\nThere is currently no way for VRCFT to simultaneously extract data from the headset and send eye and face tracking to the Quest version of VRChat, so the following solutions are only for PCVR.\nNote that native Eye Tracking support is now in open beta for the Quest version of VRChat for use with the Quest Pro, which does ",(0,r.kt)("strong",{parentName:"p"},"not")," require the use of VRCFaceTracking to function."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Currently available video tutorials for VRCFaceTracking Quest Pro setup are outdated and not meant for VRCFT5.0+!!!")),(0,r.kt)("p",null,"The Quest Pro currently has 1 readily available face-tracking compatible PCVR connection methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Oculus Link (or Airlink)")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Currently, the ALXR module is not yet available for VRCFT5.0, though Korejan is working very hard on it and is roadblocked by a feature of VRCFaceTracking not being ready yet!")),(0,r.kt)("h3",{id:"enabling-developer-mode-on-the-headset"},"Enabling Developer Mode on the Headset"),(0,r.kt)("p",null,"Instructions originally from ",(0,r.kt)("a",{parentName:"p",href:"https://learn.adafruit.com/sideloading-on-oculus-quest/enable-developer-mode"},"https://learn.adafruit.com/sideloading-on-oculus-quest/enable-developer-mode")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://developer.oculus.com/sign-up/"},"Set up a Meta Oculus developer account"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'A developer account is necessary (for now) as the eye and face OpenXR extensions are currently considered "developer features".\nIt is rather trivial to apply for and there is no check for being a "real organization".'))),(0,r.kt)("li",{parentName:"ol"},'Install the Oculus ("Meta Quest") app on mobile device (if it isn\u2019t already) and login with your (developer) Oculus account. Register your headset in the app.'),(0,r.kt)("li",{parentName:"ol"},"In the Oculus mobile App, tap Menu at the bottom right, then Devices. Select your Quest Pro, then go to ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings -> Developer Mode")," and set the Developer Mode switch to enabled.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Reboot the headset after enabling Developer Mode.")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Developer Mode",src:a(71332).Z,width:"1280",height:"506"})),(0,r.kt)("h3",{id:"enabling-eye-and-face-tracking-on-the-headset"},"Enabling Eye and Face Tracking on the Headset"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Open up the Settings in your Quest Pro headset, and navigate to "Movement Settings"'),(0,r.kt)("li",{parentName:"ol"},'Select the "Natural Facial Expressions" tab on the left, then Enable Natural Facial Expressions'),(0,r.kt)("li",{parentName:"ol"},'Select the "Eye Tracking" tab on the left, then Enable Eye Tracking. If you haven\u2019t already, calibrate your eye tracking\n',(0,r.kt)("img",{alt:"Quest Settings",src:a(52683).Z,width:"742",height:"741"}))),(0,r.kt)("h3",{id:"oculus-linkairlink-pc-setup"},"Oculus Link/Airlink PC Setup"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#enabling-developer-mode-on-the-headset"},(0,r.kt)("strong",{parentName:"a"},"MAKE SURE YOUR HEADSET IS IN DEVELOPER MODE"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#enabling-eye-and-face-tracking-on-the-headset"},"Enable Headset Eye and Face Tracking"),(0,r.kt)("admonition",{parentName:"li",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Do ",(0,r.kt)("strong",{parentName:"p"},"not")," skip these steps. Please follow the instructions for setting the headset to developer mode using the mobile app before proceeding.\nEven if you think it is in developer mode already, ",(0,r.kt)("strong",{parentName:"p"},"follow the instructions anyways"),"."))),(0,r.kt)("li",{parentName:"ol"},"Install and start the ",(0,r.kt)("a",{parentName:"li",href:"https://www.oculus.com/download_app/?id=1582076955407037"},"Oculus PC application")," (if it isn't already)."),(0,r.kt)("li",{parentName:"ol"},"Follow setup instructions for logging in and adding your Quest Pro to ",(0,r.kt)("inlineCode",{parentName:"li"},"Devices"),"."),(0,r.kt)("li",{parentName:"ol"},"In the Oculus PC application, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," in the left sidebar, then ",(0,r.kt)("inlineCode",{parentName:"li"},"General")," tab. Turn on ",(0,r.kt)("inlineCode",{parentName:"li"},"Unknown Sources"),". Set the ",(0,r.kt)("inlineCode",{parentName:"li"},"OpenXR Runtime")," to Oculus",(0,r.kt)("admonition",{parentName:"li",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"SET THE OPENXR RUNTIME TO OCULUS"),". This is the ",(0,r.kt)("em",{parentName:"p"},"second")," most forgotten step of Quest Pro setup.")),(0,r.kt)("img",{alt:"Oculus PC App General Tab",src:a(48084).Z,width:"965",height:"262"})),(0,r.kt)("li",{parentName:"ol"},"Navigate to the ",(0,r.kt)("inlineCode",{parentName:"li"},"Beta")," tab. Enable ",(0,r.kt)("inlineCode",{parentName:"li"},"Developer Runtime Features"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Eye tracking over Oculus Link"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"Natural Facial Expressions over Oculus Link"),".\nYou can try enabling ",(0,r.kt)("inlineCode",{parentName:"li"},"Passthrough over Oculus Link")," but that ",(0,r.kt)("em",{parentName:"li"},"may")," cause issues. ",(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you do not see these options, you did not follow the previous steps correctly.")),"   ",(0,r.kt)("img",{alt:"Oculus PC app Beta Tab",src:a(1100).Z,width:"1156",height:"841"}))),(0,r.kt)("h2",{id:"modules"},"Modules"),(0,r.kt)("p",null,"Install the ",(0,r.kt)("strong",{parentName:"p"},'"QuestProOpenXRTrackingModule"')," from the ",(0,r.kt)("a",{parentName:"p",href:"/docs/vrcft-software/vrcft#module-registry"},"VRCFaceTracking Module Registry"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/regzo2/VRCFaceTracking-QuestProOpenXR"},"QuestProOpenXRTrackingModule source repository"),' (Currently maintained by Regzo2 / Azmidi / "Mitchell Moment")'),(0,r.kt)("p",null,"Follow the module installation instructions in the respective module pages, and learn about the avalible PCVR streaming methods by continuing down to ",(0,r.kt)("a",{parentName:"p",href:"#setup"},"Setup"),"!"),(0,r.kt)("h2",{id:"tips-and-tricks"},"Tips and Tricks"),(0,r.kt)("h3",{id:"aligning-play-spaces-with-steamvr-lighthouse-tracked-devices"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/bdunderscore/OpenVR-SpaceCalibrator/tree/continuous-cal"},"Aligning Play Spaces with SteamVR Lighthouse-tracked Devices")),(0,r.kt)("h3",{id:"using-index-controllers-with-the-quest-pro-with-linkairlink"},"Using Index Controllers with the Quest Pro with Link/Airlink"),(0,r.kt)("p",null,"Download these ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/channels/849300336128032789/1033745772979699775/1056009844701806643"},"Powershell Scripts (Discord Link)")),(0,r.kt)("p",null,"To run, right-click the file -> ",(0,r.kt)("inlineCode",{parentName:"p"},'"Run with Powershell"')),(0,r.kt)("h2",{id:"common-issues-and-how-to-solve-them"},"Common Issues (and How to Solve Them)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},'When using Oculus Link/Airlink, I cannot see SteamVR because it is blocked still running "VRCFaceTracking"'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Cause: The nature of the way VRCFaceTracking must pull data from the Oculus OpenXR runtime is inherently hacky, effectively running 2 VR programs at once."),(0,r.kt)("li",{parentName:"ul"},"Solution: Try switching up the program startup sequence, starting VRCFaceTracking then SteamVR through the desktop Steam app (not through the Oculus Dash in the headset) or vice versa.\nAn alternative solution is to use ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/LibreQuest/OculusKiller"},"OculusKiller")," to avoid dealing with the Oculus Dash entirely.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},'OpenXR VRCFT module method: "',"[QuestOpenXR]",' Failed to GetFaceExpressionWeightsFB"')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Cause: There is some permission in the setup that was not set correctly."),(0,r.kt)("li",{parentName:"ul"},"Solution: ",(0,r.kt)("em",{parentName:"li"},"Carefully")," re-run through ",(0,r.kt)("a",{parentName:"li",href:"#oculus-linkairlink-setup"},"the setup"),", paying careful attention to all the steps before the method split."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\"I 100% made sure I followed all setup correctly, and I'm ",(0,r.kt)("em",{parentName:"strong"},"not getting any visible errors anywhere"),', but VRC only receives 0 values for all parameters (and VRC loaded a non-zero number of parameters from config)"')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Solution: Try toggling the eye and face tracking enables in the headset settings."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Oculus Link/Airlink: My playspace calibration resets if I take off the headset.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Cause: When the Quest headset enters sleep mode after detecting you have taken off the headset, it loses it's original reference space to which the SteamVR space was calibrated to."),(0,r.kt)("li",{parentName:"ul"},"Solution: Download the ",(0,r.kt)("a",{parentName:"li",href:"https://developer.oculus.com/documentation/unity/ts-odh/"},"Meta Quest Developer Hub")," and follow the instructions for ",(0,r.kt)("em",{parentName:"li"},"Connect Headset to MQDH")," and ",(0,r.kt)("em",{parentName:"li"},"Disable proximity sensor and guardian"),".\nThis will prevent the headset from entering sleep, but does mean your headset stays fully active even if you take it off.")))))}d.isMDXComponent=!0},82648:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/vrcft_installer-ee91e492bc58e5982831a43ad159fa6e.png"},71332:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/dev-mode-1b01d292cb6ca7873ad6831cd870cfec.png"},1100:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oculus_pc_app_beta-ad7c8e052a4f74f4eebbd2f7c2218d29.png"},48084:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oculus_pc_app_general-d87b3a1f7b967baba62015a2f5480656.png"},52683:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/quest_pro_settings_eye_tracking-b24a4c4e658fd0506850dea5c17f0739.jpeg"},90512:(e,t,a)=>{function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}a.d(t,{Z:()=>r});const r=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}}}]);