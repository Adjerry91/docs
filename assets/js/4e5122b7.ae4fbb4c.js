"use strict";(self.webpackChunkvrcft_docs=self.webpackChunkvrcft_docs||[]).push([[8628],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>f});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),l=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},c=function(t){var e=l(t.components);return r.createElement(p.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,p=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),u=l(a),d=n,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return a?r.createElement(f,s(s({ref:e},c),{},{components:a})):r.createElement(f,s({ref:e},c))}));function f(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i[u]="string"==typeof t?t:n,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7083:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={description:"Detailed explanation of Float-typed parameters."},s="Float Parameters",i={unversionedId:"tutorial-avatars/tutorial-avatars-extras/parameters/types/float",id:"tutorial-avatars/tutorial-avatars-extras/parameters/types/float",title:"Float Parameters",description:"Detailed explanation of Float-typed parameters.",source:"@site/docs/tutorial-avatars/tutorial-avatars-extras/parameters/types/float.md",sourceDirName:"tutorial-avatars/tutorial-avatars-extras/parameters/types",slug:"/tutorial-avatars/tutorial-avatars-extras/parameters/types/float",permalink:"/docs/next/tutorial-avatars/tutorial-avatars-extras/parameters/types/float",draft:!1,editUrl:"https://github.com/VRCFaceTracking/docs/edit/master/docs/tutorial-avatars/tutorial-avatars-extras/parameters/types/float.md",tags:[],version:"current",frontMatter:{description:"Detailed explanation of Float-typed parameters."},sidebar:"tutorialSidebar",previous:{title:"Binary Parameters",permalink:"/docs/next/tutorial-avatars/tutorial-avatars-extras/parameters/types/binary"},next:{title:"Unified Expressions",permalink:"/docs/next/tutorial-avatars/tutorial-avatars-extras/unified-blendshapes"}},p={},l=[],c={toc:l},u="wrapper";function m(t){let{components:e,...a}=t;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"float-parameters"},"Float Parameters"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Float Parameters")," (typically ",(0,n.kt)("strong",{parentName:"p"},"Floating-point")," numbers, shortened as ",(0,n.kt)("strong",{parentName:"p"},"Floats"),")\nare a parameter type available for use in VRCFaceTracking. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Floats")," are the ",(0,n.kt)("em",{parentName:"p"},"native")," parameter type of all parameters in ",(0,n.kt)("strong",{parentName:"p"},"VRCFaceTracking"),",\n",(0,n.kt)("strong",{parentName:"p"},"VRChat"),", and ",(0,n.kt)("em",{parentName:"p"},"other platforms")," that can accept VRCFaceTracking tracking data. They\nrepresent numbers with a defined amount of decimal points."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Floats")," are the simplest and most direct parameter type to use for\na face tracking parameter and the easiest to manage face tracking setups for."),(0,n.kt)("p",null,"Float parameters are typically driven with a Blend Tree, such as the one pictured below:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://i.imgur.com/KSAPIFz.png",alt:null})),(0,n.kt)("p",null,"There are multiple Float parameters that are given in an X and Y distinction, and using a 2D Blend Tree is the best way to control these parameters. Here is an example of how you would drive such a parameter:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://i.imgur.com/DGsedgX.png",alt:null})))}m.isMDXComponent=!0}}]);